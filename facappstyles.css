body {
    font-family:Courier;
    text-align:center;
    }
p { 
    color: rgb(237, 190, 202);
    font-size: 14px;
}
.collage-container{
    display:flex; 
    align-items: center; 
    justify-content: center; 
    margin: 50px;
}

.collage{
    display: grid;
    grid-template-rows: repeat(4, 250px);
    grid-template-columns: repeat(6, 187.5px);
}

/*I don't really know what this code does because I just googled around and tried things from various reddit questions*/
/*I am targeting the specific image with this class, not the item (in my code, are the item and image linked?? confusion)*/
/*first four lines are what allowed me to actually achieve the resizing! grid-column instructions without these didn't work*/
.collage__img--1{
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
    grid-column-start: 1;
    grid-column-end: 2;
    grid-row-start: 1;
    grid-row-end: 2;      
}

/*this code works for actual size (two grid boxes)*/
.collage__img--2{
    width: 200%;
    height: 200%;
    display: block;
    object-fit: cover;
    grid-column-start: 2;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 3;      
}


/*for triple the size it looks like I need to code the collage item first like this, then the image separately underneath...*/
/*notice that the ITEM is at 300% but the img is at 100%*/
/*dunno why this works... do I need both these bits?? */
.collage__item--3{
    width: 300%;
    height: 300%;
    display: block;
    object-fit: cover;
    grid-column-start: 4;
}

.collage__img--3{
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
    grid-column-start: 4;
}

/*again I had to write the item and then the img inside it for the last two*/
.collage__item--4{
    width: 200%;
    height: 200%;
    display: block;
    object-fit: cover;
    grid-column-start: 3;
    grid-row-start: 2;     
}
.collage__img--4{
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
    grid-column-start: 3;
    grid-row-start: 2;     
}

.collage__item--5{
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
    grid-column-start: 1;
    grid-row-start: 4;     
}
.collage__img--5{
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
    grid-column-start: 1;
    grid-row-start: 4;     
}

/*this just centers slideshow on page*/
.slideshow-container{
    display:flex; 
    align-items: center; 
    justify-content: center; 
}

/*tuto to re-en from here, this def works*/
#slides {
    position: relative; /*this is positioned in the normal flow of the page but with margin 0 and padding 50 from container*/
    height: 500px;
    width: 375px;
    padding: 0px;
    margin: 50px;
    list-style-type: none;
}

/*absolute means positioned relative to the slideshow container rather than the viewport*/
/*on slide, opacity goes to 0 (transparent) from 1 (opaque) over the course of 1 second (transition property)*/
/*the z index is the position of this slide in the stack. The higher number is in front of the lower number*/

/*so when the current slide is just 'slide' class it moves to the back of the stack and*/
/*the opacity goes to transparent, over the course of 1 second*/
.slide { 
    position: absolute;
    left: 0px;
    top: 0px;
    width: 100%;
    height: 100%;
    opacity: 0;
    z-index: 1;

    /*these lines just make sure the transition effect works on all browsers*/
    -webkit-transition: opacity 1s;
    -moz-transition: opacity 1s;
    -o-transition: opacity 1s;
    transition: opacity 1s;
}

/*When the slide goes into 'showing' class it becomes opaque and moves to the front of the stack... I think that's how this works*/
.showing {
    opacity: 1;
    z-index: 2;
}

